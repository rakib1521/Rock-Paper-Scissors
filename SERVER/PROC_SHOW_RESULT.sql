set serveroutput on;
create or replace procedure show_result
		IS
		
move_P1 INTEGER;
move_P2 INTEGER;
C INTEGER;	
C1 INTEGER;
played_P1 INTEGER;
played_P2 INTEGER;


ALREADY_PLAYED EXCEPTION ;
your_turn EXCEPTION;





	
begin





SELECT COUNT(ID) INTO C FROM P1;

SELECT COUNT(ID) INTO C1 FROM P2@site_link;

SELECT MOVE,PLAYED INTO move_P1,played_P1 FROM P1 where ID=c;
SELECT MOVE,PLAYED INTO move_P2,played_P2 FROM P2@site_link where ID=c;


IF played_P1=1 and played_P2=1 THEN
RAISE ALREADY_PLAYED;
END IF;
IF C1>C THEN
RAISE your_turn;
END IF;


IF move_P1=move_P2 THEN
DBMS_OUTPUT.PUT_LINE('DRAW');
IF move_P1=0 THEN
insert into RESULT_TABLE (ID,MOVE_P1,MOVE_P2,MATCH_RESULT) values (c,'ROCK','ROCK','DRAW');
UPDATE P1 SET PLAYED=1 WHERE ID=c;
UPDATE P2@site_link SET PLAYED=1 WHERE ID=c;
ELSIF move_P1=1 THEN
insert into RESULT_TABLE (ID,MOVE_P1,MOVE_P2,MATCH_RESULT) values (c,'PAPER','PAPER','DRAW');
UPDATE P1 SET PLAYED=1 WHERE ID=c;
UPDATE P2@site_link SET PLAYED=1 WHERE ID=c;
ELSE
insert into RESULT_TABLE (ID,MOVE_P1,MOVE_P2,MATCH_RESULT) values (c,'SCISSOR','SCISSOR','DRAW');
UPDATE P1 SET PLAYED=1 WHERE ID=c;
UPDATE P2@site_link SET PLAYED=1 WHERE ID=c;
END IF;
ELSIF move_P1=0 and move_P2=2 THEN
DBMS_OUTPUT.PUT_LINE('PLAYER 1 WIN');
insert into RESULT_TABLE (ID,MOVE_P1,MOVE_P2,MATCH_RESULT) values (c,'ROCK','SCISSOR','PLAYER 1');
UPDATE P1 SET PLAYED=1 WHERE ID=c;
UPDATE P2@site_link SET PLAYED=1 WHERE ID=c;
ELSIF move_P1=1 and move_P2=0 THEN
DBMS_OUTPUT.PUT_LINE('PLAYER 1 WIN');
insert into RESULT_TABLE (ID,MOVE_P1,MOVE_P2,MATCH_RESULT) values (c,'PAPER','ROCK','PLAYER 1');
UPDATE P1 SET PLAYED=1 WHERE ID=c;
UPDATE P2@site_link SET PLAYED=1 WHERE ID=c;
ELSIF move_P1=2 and move_P2=1 THEN
DBMS_OUTPUT.PUT_LINE('PLAYER 1 WIN');
insert into RESULT_TABLE (ID,MOVE_P1,MOVE_P2,MATCH_RESULT) values (c,'SCISSOR','PAPER','PLAYER 1');
UPDATE P1 SET PLAYED=1 WHERE ID=c;
UPDATE P2@site_link SET PLAYED=1 WHERE ID=c;
ELSIF move_P1=2 and move_P2=0 THEN
DBMS_OUTPUT.PUT_LINE('PLAYER 2 WIN');
insert into RESULT_TABLE (ID,MOVE_P1,MOVE_P2,MATCH_RESULT) values (c,'SCISSOR','ROCK','PLAYER 2');
UPDATE P1 SET PLAYED=1 WHERE ID=c;
UPDATE P2@site_link SET PLAYED=1 WHERE ID=c;
ELSIF move_P1=0 and move_P2=1 THEN
DBMS_OUTPUT.PUT_LINE('PLAYER 2 WIN');
insert into RESULT_TABLE (ID,MOVE_P1,MOVE_P2,MATCH_RESULT) values (c,'ROCK','PAPER','PLAYER 2');
UPDATE P1 SET PLAYED=1 WHERE ID=c;
UPDATE P2@site_link SET PLAYED=1 WHERE ID=c;
ELSIF move_P1=1 and move_P2=2 THEN
DBMS_OUTPUT.PUT_LINE('PLAYER 2 WIN');
insert into RESULT_TABLE (ID,MOVE_P1,MOVE_P2,MATCH_RESULT) values (c,'PAPER','SCISSOR','PLAYER 2');
UPDATE P1 SET PLAYED=1 WHERE ID=c;
UPDATE P2@site_link SET PLAYED=1 WHERE ID=c;


END IF;


EXCEPTION 
WHEN no_data_found THEN 
DBMS_OUTPUT.PUT_LINE('WAITING FOR PLAYER 2');
WHEN ALREADY_PLAYED THEN 
DBMS_OUTPUT.PUT_LINE('INSERT NEW MOVE');
WHEN your_turn THEN 
DBMS_OUTPUT.PUT_LINE('YOUR TURN NOW');



end show_result;
/
COMMIT;